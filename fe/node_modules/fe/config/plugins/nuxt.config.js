const { join } = require('path')
module.exports = (runtime = {}) => {
  const { env = {} } = process
  const dev = env.NODE_ENV !== 'production'
  let { SERVER_PORT, SERVER_IP } = env

  if (dev) {
    SERVER_PORT = runtime.project.config.DEV_SERVER_PORT
    SERVER_IP = runtime.project.config.DEV_SERVER_IP
  }

  let modules = []

  // Default use axios modules for client/server
  modules.push('@nuxtjs/axios')

  // ENABLE_PWA
  if (runtime.project.config.ENABLE_PWA) {
    modules.push('@nuxtjs/pwa')
  }

  // console.log(SERVER_IP, SERVER_PORT)
  return {
    cache: true,
    /*
      ** Headers of the page
      */
    /*  head: {
      title: 'starter',
      meta: [
        { charset: 'utf-8' },
        { name: 'viewport', content: 'width=device-width, initial-scale=1' },
        { hid: 'description', name: 'description', content: 'Nuxt.js project' }
      ],
      link: [{ rel: 'icon', type: 'image/x-icon', href: '/favicon.ico' }]
    },*/

    // Inject ENV for nuxt context
    // 改动这里需要 rebuild, 应该是用 webpack.Defined 注入的
    // asyncData 里 `SERVER_IP` undefined, 临时用常量代替.
    env: {
      HOST_URL: `http://${SERVER_IP || '127.0.0.1'}:${SERVER_PORT || '4000'}`
    },
    /*
      ** Global CSS
      */
    // css: ['~assets/css/main.css'],
    /*
      ** Customize the progress-bar color
      */
    loading: false,
    modules: modules,
    axios: {
      // 默认策略: 同源携带 cookie
      credentials: true,
      // TODO: 这里变量应该是 webpack.Defined 注入的, 环境变量在 webpack context 里 undefined
      // https://github.com/nuxt-community/axios-module/blob/dd677341a6425899ad1af0fe2f8f38f7527b746f/lib/module.js#L12
      host: SERVER_IP || '127.0.0.1',
      port: SERVER_PORT || '4000',
      // baseURL: `http://${SERVER_IP}:${SERVER_PORT}`,
      // browserBaseURL: `http://${SERVER_IP}:${SERVER_PORT}`
      // prefix: '/',
      browserBaseURL: '/'
      // https: false
    },
    rootDir: runtime.project.appRoot,
    modulesDir: ['node_modules', runtime.ENV.internalModulePath],
    srcDir: runtime.project.config.CLIENT_DIR,
    buildDir: runtime.project.config.DIST_DIR,
    router: {
      base: runtime.project.config.PREFIX_PATH
    },
    render: {
      bundleRenderer: {
        // For vue-server-renderer
        // if (!basedir) => use require instead of requireSync
        basedir: ''
      }
    },
    build: {
      babel: {
        plugins: ['transform-runtime']
      },
      // analyze: true,
      publicPath: runtime.project.config.PUBLIC_PATH,
      // vendor: ['vuetify', 'axios'],
      // vendor: ['axios'],
      postcss: require('../../utils/mergeConfigFile')(
        'plugins/postcss.config.js',
        'postcss.config.js',
        runtime
      ),
      vendor: [
        join(runtime.ENV.sharedConfigPath, 'polyfills.js'),
        runtime.project.POLYFILLS_FILE,
        'axios'
      ],
      extractCSS: true,
      filenames: {
        chunk: '[id].[chunkhash].js'
      },
      extend(config, { isDev, isClient }) {
        config.resolveLoader.modules = config.resolveLoader.modules.concat([
          'node_modules',
          runtime.ENV.internalModulePath
        ])
        config.resolve.modules = config.resolve.modules.concat([
          'node_modules',
          runtime.ENV.internalModulePath
        ])

        return config
      },
      // false for spa mode
      ssr: runtime.project.config.ENABLE_SSR
    },
    generate: {
      dir: 'output',
      routes: ['/index', '/about', '/sub/detail']
    }
    // plugins: [{ src: '~plugins/ga.js', ssr: false }]
  }
}
