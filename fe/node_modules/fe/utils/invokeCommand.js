const { spawn } = require('child_process')
module.exports = (execPath, args) => {
  // console.log(11, execPath, args)
  // const proc = spawn(process.execPath || 'node' || 'nodejs', args, { stdio: 'inherit' })
  const proc = spawn(execPath, args)

  proc.stdout.on('data', data => {
    process.stdout.write(data)
  })

  proc.stderr.on('data', data => {
    const str = data.toString()
    // let url = ((str).match(/(chrome-devtools:\/\/[^\s]*)/) || [])[0]
    // TODO: BUG
    // only copy-paste work
    // url && openBrowser(url)

    process.stderr.write(
      str.replace(
        'Warning: This is an experimental feature and could change at any time.',
        ''
      )
    )
  })

  proc.on('exit', (code, signal) =>
    process.on('exit', () => {
      if (signal) {
        process.kill(process.pid, signal)
      } else {
        process.exit(code)
      }
    })
  )

  // terminate children.
  process.on('SIGINT', () => {
    proc.kill('SIGINT') // calls runner.abort()
    proc.kill('SIGTERM') // if that didn't work, we're probably in an infinite loop, so make it die.
  })
}
