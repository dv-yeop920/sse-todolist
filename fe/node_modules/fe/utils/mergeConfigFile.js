const { join } = require('path')
const { inline } = require('./console')

/*
customeConfigFile:

module.exports = (config, runtime) => {
  config.plugins.push(
    require('autoprefixer')({})
  )
  return config
}
 */

/**
 * merge config file or object
 * @param  {String|Object} defaultConfigFile file or object
 * @param  {String|Object} customeConfigFile file or object
 * @param  {Object} runtime           [description]
 * @return {Object}                   [description]
 */
module.exports = (defaultConfigFile = {}, customeConfigFile, runtime) => {
  runtime = runtime || require('../modules/runtime/')()

  const { CONFIG_DIR } = runtime.project
  const { sharedConfigPath } = runtime.ENV

  let defaultConfig = {}

  // file
  if (defaultConfigFile + '' === defaultConfigFile) {
    try {
      defaultConfig = require(join(sharedConfigPath, defaultConfigFile))(
        runtime
      )
    } catch (err) {}
  } else {
    defaultConfig = defaultConfigFile || {}
  }
  if (!CONFIG_DIR || !customeConfigFile) return defaultConfig

  // file
  if (customeConfigFile + '' === customeConfigFile) {
    try {
      return require(join(CONFIG_DIR, customeConfigFile))(
        defaultConfig,
        runtime
      )
    } catch (err) {
      inline.error('Configure parse error:')
      console.log(err)
      return defaultConfig
    }
  } else {
    return Object.assign({}, defaultConfig, customeConfigFile)
  }
}
