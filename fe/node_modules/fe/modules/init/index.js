const { join, resolve } = require('path')
const rimraf = require('rimraf')
const inquirer = require('inquirer')
const chalk = require('chalk')
const { inline, Spinner } = require('../../utils/console')
const download = require('./download')
const generate = require('./generate')

const spinner = new Spinner()

module.exports = async (args, options, logger) => {
  let { boilerplate, project } = args
  if (!boilerplate) {
    const result = await inquirer.prompt({
      type: 'input',
      name: 'boilerplate',
      message: `Choose your project boilerplate, see: ${chalk.blue.underline(
        `fe list`
      )}`,
      default: 'basic'
    })
    boilerplate = result.boilerplate
  }

  // if (!project) {
  //   const result = await inquirer.prompt({
  //     type: 'input',
  //     name: 'project',
  //     message: `Project name`,
  //     default: 'test'
  //   })
  //   project = result.project
  // }
  spinner.start({
    text: 'downloading boilerplate..'
  })
  const runtime = await require('../runtime/')()
  const tmp = join(runtime.ENV.cacheRoot, `boilerplate-${+new Date()}`)
  process.on('exit', () => rimraf.sync(tmp))
  await download(`fe-boilerplate/${boilerplate}`, tmp).catch(err => {
    console.log('\n')
    inline.error(
      `Failed to download repo ${boilerplate}: ${err.message.trim()}`
    )
  })
  spinner.stop()
  const to = resolve(project || '.')
  generate(project, tmp, to, err => {
    if (err) inline.error(err)
  })
}
